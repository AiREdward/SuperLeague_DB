PROGETTO BASI DI DATI
STEFANO BASO – ARMANDO MIO
MAT. 1231758  –  1223862
- SUPER LEAGUE -

1. ABSTRACT
Florentino Pérez, presidente del Real Madrid e della neonata SuperLeague, assieme agli altri membri del consiglio hanno deciso di lanciare la prima stagione storica con partenza nell’anno 2022/2023. A tal proposito quindi è stata richiesta la creazione per un gestionale che tenga traccia delle varie giornate, delle squadre partecipanti e delle partite.
I club che parteciperanno sono 15 fondatori più 5 qualificati decisi tramite torneo. I club sono stati scelti in base al numero di trofei ottenuti nella loro storia. Ogni club possiede una propria rosa con giocatori e allenatore e compete nelle varie partite di giornata in giornata. Le partite vengono disputate in stadi (di proprietà o meno dei club) e vengono dirette da un arbitro. 
Le partite vengono guardate da spettatori che comprano biglietti singoli o sono abbonati ad uno specifico club (mensilmente o stagionale) oppure vengono trasmesse in tv da vari emittenti e commentate in varie lingue.
Infine sia club che alcuni giocatori possono firmare con uno sponsor a cui sono legati vari bonus in denaro.
------------------------------------------------------------------------------------------------------------------------------------------------
2. ANALISI DEI REQUISITI
Di ogni club si vuole registrare il nome, l’anno di fondazione, nome del presidente, la nazionalità di appartenenza, il capitale sociale e i colori della maglia. Si dividono in club fondatori e qualificati. Quest’ultimi vengono decisi tramite torneo di cui si tiene traccia del girone e del risultato. Si registra inoltre il numero di trofei totali vinti.
I vari club sono formati da una rosa che a sua volta comprende allenatore e giocatori. Per la rosa si vuole tenere traccia del codice fiscale (CF), nome, cognome, data di nascita, nazionalità, anni di contratto e stipendio.
Per i giocatori poi si registra anche il ruolo, il numero di maglia, il piede preferito, valore mercato e il numero di presenze. 
Per gli allenatori invece si registra il modulo più usato e la media punti.
Ogni club possiede uno stadio di cui viene memorizzato il nome, l’anno di costruzione, la capienza e se è di proprietà del club. I vari club hanno uno sponsor (uno solo per club) di cui si tiene traccia del nome, del netto e bonus in euro. Anche alcuni giocatori singoli possono avere uno sponsor.
Le varie rose competono tra loro nelle partite di cui viene indicato il codice, l’orario e salvato il risultato. Le partite sono poi suddivise nelle varie giornate della stagione e composti i vari abbinamenti delle squadre, si tiene traccia della data e dell’emittente tv dove vederla. Ad ogni partita inoltre è assegnato un arbitro di cui si registra nome, cognome, età e nazionalità. Degli emittenti tv si registra il nome, la coppia di cronista e opinionista che fa da telecronaca e la lingua parlata.
È possibile seguire la partita possedendo un biglietto singolo o abbonamento, viene registrato il nome del possessore, il codice e il prezzo. Per i biglietti singoli viene registrata la data della partita e i dati del posto a sedere (settore, fila, posto). Ogni club mette a disposizione un abbonamento stagionale o mensile per seguire il club nelle varie partite.
2.1 OPERAZIONI TIPICHE
GIORNALIERE
Registrazione di un nuovo biglietto singolo per le partite	20.000
Aggiornamento risultati partite	35
Ricerca emittente tv che trasmette le partite	40
Visualizzazione arbitro assegnato alle varie partite	10

ANNUALI
Registrazione nuovi abbonamenti stagionali ai club	50.000
Aggiornamento contratti giocatori e allenatore in scadenza	75
Visualizzazione bilancio e incassi	80

3. PROGETTAZIONE CONCETTUALE
	3.1 LISTA ENTITA’
Nel database sono contenute 18 entità. Tutti gli attributi elencati di seguito sono NOT NULL tranne i casi in cui verrà espressamente indicato.
CLUB: le varie società partecipanti alla competizione
•	NOME:				string, primary key
•	COLORE_MAGLIA:		string
•	NAZIONALITA:			string
•	PRESIDENTE:			string
•	ANNO_FONDAZIONE:		int
•	CAPITALE:			int

FONDATORI: club che rimangono fissi all’interno della SuperLeague
•	TROFEI:			int

QUALIFICATI: club che partecipano in base alla vincita del torneo
TORNEO: competizione di inizio stagione per decidere gli ultimi posti da assegnare ai partecipanti
•	GIRONE:			int, primary key
•	RISULTATO:			string
•	ORARIO:			time

ROSA: componenti dei vari club compresi di informazioni personali e statistiche
•	CF:				string, primary key
•	NOME:				string
•	COGNOME:			string
•	DATA_NASCITA:		date
•	NAZIONALITA:			string
•	ANNI_CONTRATTO:		date
•	STIPENDIO:			int
ALLENATORE: tecnico in carica che allena la squadra
•	MODULO:			string
•	MEDIA_PTI:			decimal

GIOCATORI: divisi nei vari ruoli formano la squadra
•	RUOLO:			string
•	PRESENZE:			int
•	N_MAGLIA:			int
•	PIEDE:				string
•	VALORE_MERCATO:		int

STADIO: luogo in cui vengono disputate le partite
•	NOME:				string, primary key
•	ANNO_COSTRUZIONE:	int
•	CAPIENZA:			int
•	PROPRIETA:			boolean

PARTITA: match giornaliero in cui si scontrano due squadre
•	COD:				string, primary key
•	ORA:				time
•	GOAL_CASA:			int
•	GOAL_TRASFERTA:		int

EMITTENTE_TV: lista di canali e programmi in cui vengono trasmesse le partite
•	NOME:				string, primary key
•	CRONISTA:			string
•	OPINIONISTA:			string
•	LINGUA:			string

ARBITRO: ufficiale di gare che dirige la partita
•	CF:				string, primary key
•	NOME:				string
•	COGNOME:			string
•	DATA_NASCITA:		date
•	NAZIONALITA:			string

GIORNATA: divisione delle varie partite di campionato
•	NUMERO:			int, primary key
•	DATA_G:			date

SPONSOR: aziende che hanno contratti con club o giocatori
•	NOME:				string, primary key
•	NETTO:			int
•	BONUS:			int

BIGLIETTO: ticket venduto per guardare la partita
•	COD:				string, primary key
•	TITOLARE:			string
•	PREZZO:			decimal

SINGOLO: biglietto valido per una sola partita
•	DATA:				date
•	SETTORE:			int
•	FILA:				int
•	POSTO:			int, (null)

ABBONAMENTO: biglietto valido per tutte le partite di un club
MENSILE: abbonamento di taglia mensile 
STAGIONALE: abbonamento valido per tutta la stagione

	3.2 LISTA RELAZIONI
CLUB – ROSA:				AVERE (1, 1)
•	Ogni club possiede una sola rosa (1, 1)
•	Una rosa appartiene ad uno e un solo club (1,1)

CLUB – PARTITA:			CASA (1, N)
•	Ogni club gioca una o più partite in casa all’interno della stagione (1, N)
•	Una partita comprende una sola squadra che gioca in casa (1, 1)

CLUB – PARTITA:			TRASFERTA (1, N)
•	Ogni club gioca una o più partite in trasferta durante la stagione (1, N)
•	Una partita comprende una sola squadra che gioca in trasferta (1, 1)

CLUB – STADIO:			POSSEDERE (1, N)
•	Un club può possedere al massimo uno stadio in cui giocare (0, 1)
•	Lo stesso stadio può essere posseduto da più squadre (1, N)


CLUB – SPONSOR:			FIRMARE (1, 1)
•	Un club firma con uno e un solo sponsor (1, 1)
•	Uno sponsor appartiene ad un solo club (1, 1)

CLUB – ABBONAMENTO:		APPARTENERE (1, N)
•	Un club può avere uno o più abbonamenti attivi per la stagione (o mensili) (1, N)
•	L’abbonamento può essere fatto per un solo club (1, 1)

QUALIFICATI – TORNEO:		PARTECIPARE (1, N)
•	I club che si vogliono qualificare partecipano ad un torneo (1, 1)
•	Il torneo di qualificazione è formato da una o più squadre (1, N)

GIOCATORI – SPONSOR:                     SIGLARE (1, N)
•	Alcuni giocatori possono firmare per uno sponsor solo (0, 1)
•	Uno sponsor può avere anche più giocatori contemporaneamente (0, N)

PARTITA – STADIO:			GIOCARE (1, 1)
•	La partita viene giocata in uno stadio (1, 1)
•	In uno stadio viene al massimo giocata una sola partita per volta (0, 1)

PARTITA – GIORNATA:		ASSEGNARE (1, N)
•	Ogni partita corrisponde ad una sola giornata (1, 1)
•	Una giornata comprende più partite (1, N)

PARTITA – EMITTENTE_TV:		TRASMETTERE (1, N)
•	Ogni partita è esclusiva di una tv (1, 1)
•	Una tv trasmette anche più partite (1, N)

PARTITA – BIGLIETTO:		VENDERE (N, M)
•	Per ogni partita vengono venduti uno o più biglietti (1, N)
•	A seconda del tipo di biglietto possono essere per una o più partite (1, N)

3.3 LISTA GENERALIZZAZIONI
CLUB: generalizzazione totale ed esclusiva
•	Ogni club può essere o fondatore o qualificato tramite torneo


ROSA: generalizzazione parziale ed esclusiva
•	La rosa è formata da allenatore e giocatori (ognuno dei due distinti) ma non si tiene conto di tutto lo staff tecnico e preparatori

BIGLIETTO: generalizzazione totale esclusiva
•	Il biglietto può essere singolo o abbonamento e nessun altro tipo

ABBONAMENTO: generalizzazione parziale esclusiva
•	Differenza tra mensile e stagionale in base alla durata e non vengono considerati i mini abbonamenti (3 o 5 partite)

3.4 SCHEMA ENTITA’ - RELAZIONE

4. ANALISI RIDONDANZE
Analisi di due delle frequenze maggiori di utilizzo di due operazioni tipiche del database.
OPERAZIONE 1: registrazione di un nuovo biglietto singolo per la partita 20.000 al giorno
OPERAZIONE 2: visualizzazione emittente tv che trasmette le partite 40 al giorno

CON RIDONDANZA
OPERAZIONE 1.
CONCETTO	COSTRUTTO	ACCESSO	TIPO
PARTITA	E	1	S
VENDERE	R	1	S
BIGLIETTO	E	1	L
BIGLIETTO	E	1	S

COSTI:
	3 x 20.000 = 60.000 accessi in scrittura
	1 x 20.000 = 20.000 accessi in lettura

OPERAZIONE 2.
CONCETTO	COSTRUTTO	ACCESSO	TIPO
EMITTENTE_TV	E	1	L

COSTI:
	1 x 40 = 40 accessi in lettura

TOTALE: 60.000 + 20.000 + 40 = 80.040

	SENZA RIDONDANZA:
OPERAZIONE 1.
CONCETTO	COSTRUTTO	ACCESSO	TIPO
PARTITA	E	1	S
VENDERE	R	1	S
BIGLIETTO	E	1	L

COSTI:
	2 x 20.000 = 40.000 accessi in scrittura
	1 x 20.000 = 20.000 accessi in lettura

OPERAZIONE 2.
CONCETTO	COSTRUTTO	ACCESSO	TIPO
EMITTENTE_TV	E	1	L
GUARDARE	R	10	L

COSTI:
	2 x 11 = 22 accessi in lettura

TOTALE: 40.000 + 20.000 + 22 = 60.022
In questo caso si ha un numero minore di accessi nel caso senza ridondanza.
------------------------------------------------------------------------------------------------------------------------------------------------
5. RISTRUTTURAZIONE SCHEMA ER
GENERALIZZAZIONE:		1 – PADRE: CLUB		FIGLIE: FONDATORI, QUALIFICATI
Risolta eliminando le due entità figlie FONDATORI e QUALIFICATI tramite collasso verso l’alto e aggiunto l’attributo a ruolo per differenziare i vari club.
				2 – PADRE: ROSA		FIGLIE: ALLENATORE, GIOCATORI
Risolta eliminando l’entità padre ROSA tramite collasso verso il basso e spostati gli attributi del padre ad entrambi i figli. Aggiunte inoltre le due relazioni AVERE_G e AVERE_A per il nuovo collegamento con CLUB.
				3 – PADRE: BIGLIETTO	FIGLIE: SINGOLO
					PADRE: ABBONAMENTO	FIGLIE: MENSILE, STAGIONALE
Doppia generalizzazione risolta collassando tutto verso l’alto ed eliminando tutte le figlie SINGOLO, ABBONAMENTO, MENSILE, STAGIONALE. Aggiunto l’attributo tipo per differenziare i vari acquisti.
ATTRIBUTO COMPOSTO:	DATA in BIGLIETTO
					Eliminato l’attributo data e mantenuti data_inizio e data_fine
VALORE BOOLEANO:		PROPRIETA in STADIO
Dati inseriti nelle tabelle prendono il valore di 1 se è di proprietà, 0 se non lo è.
	
5.1 SCELTA NUOVE PRIMARY KEY
GENERALIZZAZIONE 1 – La chiave primaria dopo l’eliminazione delle figlie rimane NOME su CLUB.
GENERALIZZAZIONE 2 – La chiave primaria CF dall’entità padre ROSA viene spostata ad entrambe le figlie ALLENATORE e GIOCATORI.
GENERALIZZAZIONE 3 – La chiave primaria rimane COD su biglietto dopo l’eliminazione di tutte le figlie.

	5.2 SCHEMA ER RISTRUTTURATO
------------------------------------------------------------------------------------------------------------------------------------------------
5.3 SCHEMA TRADOTTO IN MODELLO RELAZIONALE
CLUB 	(NOME, COLORE_MAGLIA, NAZIONALITA, RUOLO, PRESIDENTE, ANNO_FONDAZIONE, TROFEI, CAPITALE)
TORNEO 		(GIRONE, RISULTATO, ORARIO)
ALLENATORE 	(CF, NOME, COGNOME, DATA_NASCITA, NAZIONALITA, STIPENDIO, ANNI_CONTRATTO, MODULO, MEDIA_PTI)
GIOCATORI 	(CF, NOME, COGNOME, N_MAGLIA, PIEDE, RUOLO, DATA_NASCITA, NAZIONALITA, STIPENDIO, ANNI_CONTRATTO, VALORE_MERCATO, PRESENZE)
SPONSOR 		(NOME, NETTO, BONUS)
PARTITA 		(COD, ORA, GOAL_CASA, GOAL_TRASFERTA)
STADIO 		(NOME, ANNO_COSTRUZIONE, CAPIENZA, PROPRIETA, CITTA)
ARBITRO 		(CF, NOME, COGNOME, ETA, NAZIONALITA)
GIORNATA 		(NUMERO, DATA_G)
EMITTENTE_TV 	(NOME, CRONISTA, OPINIONISTA, LINGUA)
BIGLIETTO 	(COD, TITOLARE, PREZZO, TIPO, DATA_INIZIO, DATA_FINE, SETTORE, FILA, POSTO)
FIRMARE 		(CLUB.NOME, SPONSOR.NOME)
PARTECIPARE 	(CLUB.NOME, TORNEO.GIRONE)
AVERE_G	 	(CLUB.NOME, GIOCATORI.CF)
AVERE_A 		(CLUB.NOME, ALLENATORE.CF)
SIGLARE 		(SPONSOR.NOME, GIOCATORI.CF)
APPARTENERE 	(CLUB.NOME, BIGLIETTO.COD)
POSSEDERE 		(CLUB.NOME, STADIO.NOME)
TRASFERTA 		(CLUB.NOME, PARTITA.COD)
CASA 			(CLUB.NOME, PARTITA.COD)
VENDERE 		(PARTITA.COD, BIGLIETTO.COD)
GIOCARE 		(STADIO.NOME, PARTITA.COD)
DIRIGERE 		(PARTITA.COD, ARBITRO.CF)
ASSEGNARE 		(PARTITA.COD, GIORNATA.NUMERO)
GUARDARE 		(PARTITA.COD, EMITTENTE_TV.NOME)
------------------------------------------------------------------------------------------------------------------------------------------------
6. QUERY, INDICE E C++
- QUERY 1. Visualizzazione della classifica di fine campionato con partite giocate, punteggio in ordine di chi ha il maggiore, goal fatti (GF), goal subiti (GS) e differenza reti.
Funzione del punteggio realizzata tramite costrutto CASE con assegnazione di 3 punti in caso di partita vinta, 1 in caso di pareggio e 0 in caso di sconfitta.

- QUERY 2. Elenco giocatori con il contratto in scadenza il 30-06-2023 di ruolo attaccante e nazionalità francese

- QUERY 3. Bilancio dei vari club in ordine di capitale, con totale giocatori valore mercato in percentuale rispetto al capitale, guadagno totale dagli sponsor (netto + bonus) totale stipendi compreso l’allenatore

- QUERY 4. Calcolo dell’età media dei giocatori per ogni club e ordinata in modo crescente

- QUERY 5. Numero di giocatori di nazionalità diversa da quella del club ordinati in modo decrescente

- QUERY 6. Selezionati il numero di goal totali commentati dalle varie emittenti tv e il numero di squadre diverse che hanno avuto
	
6.1 INDICE
Per analisi statistiche delle varie partite si richiede l’uso di un indice per la visualizzazione dei codici e risultati delle partite.
CREATE INDEX RISULTATI ON PARTITA(COD, GOAL_CASA, GOAL_TRASFERTA);
	
6.2 CODICE C++
Il codice c per l’esecuzione delle query viene gestito all’interno del main con all’inizio la connessione al databese tramite il costrutto TRY e CATCH e controllo di connessione con eventuale errore di disconnessione.
- prepareStatement() e executeQuery() vengono usati per il comando di selezione delle Query.
- next() viene usato per passare ai record dei risultati della selezione.
- getInt() e getString() vengono usati per analizzare il tipo di risultati.

NOTA: le query sono su un unico file ma dopo ogni query eseguita correttamente il sistema si mette in pausa
------------------------------------------------------------------------------------------------------------------------------------------------


